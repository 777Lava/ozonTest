scalar Time

type Post {
    id: ID!
    title: String!
    author: String!
    content: String!
    createdAt: Time!
    comments: [Comment!]!
    commentsDisabled: Boolean!
}


type Comment { 
    id: ID!
    author: String!
    postID: ID!
    parentId: ID
    content: String!
    replies: [Comment!]!
    createdAt: Time!  
}

input NewPost {
  author: String!
  title: String!
  content: String!
  commentsDisabled: Boolean!
}

input NewComment {
  author: String!
  postId: ID!
  parentId: ID
  content: String!
}



type Mutation {
    createPost(input: NewPost!): Post!
    createComment(input: NewComment!): Comment!
}

type Query { 
    getPosts: [Post]!
    getPost(id: ID!): Post!
    getComments(postID: Int!, first: Int = 25, skip: Int = 0): [Comment!]!
}
